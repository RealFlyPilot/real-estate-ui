{"expireTime":9007200850892115000,"key":"gatsby-plugin-mdx-entire-payload-c0f27076a0e254af15d8efcca67ff042-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/liamellis/Desktop/real-estate-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":118,"offset":119},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":121},"end":{"line":5,"column":29,"offset":149},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"toast","position":{"start":{"line":7,"column":1,"offset":151},"end":{"line":7,"column":6,"offset":156},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":151},"end":{"line":7,"column":6,"offset":156},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Toast","position":{"start":{"line":9,"column":3,"offset":160},"end":{"line":9,"column":8,"offset":165},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":158},"end":{"line":9,"column":8,"offset":165},"indent":[]}},{"type":"jsx","value":"<tagversion version={version} name={name} />","position":{"start":{"line":11,"column":1,"offset":167},"end":{"line":11,"column":45,"offset":211},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Notification component with ","position":{"start":{"line":13,"column":1,"offset":213},"end":{"line":13,"column":29,"offset":241},"indent":[]}},{"type":"link","title":null,"url":"https://toasted-notes.netlify.com","children":[{"type":"text","value":"toasted-note","position":{"start":{"line":13,"column":30,"offset":242},"end":{"line":13,"column":42,"offset":254},"indent":[]}}],"position":{"start":{"line":13,"column":29,"offset":241},"end":{"line":13,"column":78,"offset":290},"indent":[]}},{"type":"text","value":" and 2 components : Growl and Snackbar.","position":{"start":{"line":13,"column":78,"offset":290},"end":{"line":13,"column":117,"offset":329},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":213},"end":{"line":13,"column":117,"offset":329},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Install and import","position":{"start":{"line":15,"column":4,"offset":334},"end":{"line":15,"column":22,"offset":352},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":331},"end":{"line":15,"column":22,"offset":352},"indent":[]}},{"type":"jsx","value":"<usage component={component} name={name} peerDependencies={peerDependencies} />","position":{"start":{"line":17,"column":1,"offset":354},"end":{"line":17,"column":80,"offset":433},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"useToast","position":{"start":{"line":19,"column":4,"offset":438},"end":{"line":19,"column":12,"offset":446},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":435},"end":{"line":19,"column":12,"offset":446},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":21,"column":1,"offset":448},"end":{"line":21,"column":5,"offset":452},"indent":[]}},{"type":"inlineCode","value":"useToast","position":{"start":{"line":21,"column":5,"offset":452},"end":{"line":21,"column":15,"offset":462},"indent":[]}},{"type":"text","value":" hook to show the toast element. Example below with a custom component.","position":{"start":{"line":21,"column":15,"offset":462},"end":{"line":21,"column":86,"offset":533},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":448},"end":{"line":21,"column":86,"offset":533},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"function() {\n  const toast = useToast()\n\n  const Notification = () => (\n    <Box\n      backgroundColor=\"light.900\"\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"nude.300\"\n      borderRadius=\"sm\"\n      padding=\"sm\"\n      color=\"dark.900\"\n    >\n      Lorem ipsum dolor sit amet\n    </Box>\n  )\n\n  return (\n    <Button onClick={() => toast(<Notification />)}>\n      Show Toast\n    </Button>\n  )\n}","position":{"start":{"line":23,"column":1,"offset":535},"end":{"line":47,"column":4,"offset":961},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Options","position":{"start":{"line":49,"column":4,"offset":966},"end":{"line":49,"column":11,"offset":973},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":963},"end":{"line":49,"column":11,"offset":973},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":51,"column":1,"offset":975},"end":{"line":51,"column":5,"offset":979},"indent":[]}},{"type":"inlineCode","value":"toast","position":{"start":{"line":51,"column":5,"offset":979},"end":{"line":51,"column":12,"offset":986},"indent":[]}},{"type":"text","value":" function takes a component to be displayed and an ","position":{"start":{"line":51,"column":12,"offset":986},"end":{"line":51,"column":63,"offset":1037},"indent":[]}},{"type":"inlineCode","value":"options","position":{"start":{"line":51,"column":63,"offset":1037},"end":{"line":51,"column":72,"offset":1046},"indent":[]}},{"type":"text","value":" object:","position":{"start":{"line":51,"column":72,"offset":1046},"end":{"line":51,"column":80,"offset":1054},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":975},"end":{"line":51,"column":80,"offset":1054},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"position","position":{"start":{"line":53,"column":5,"offset":1060},"end":{"line":53,"column":13,"offset":1068},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1058},"end":{"line":53,"column":15,"offset":1070},"indent":[]}},{"type":"text","value":" : one of ","position":{"start":{"line":53,"column":15,"offset":1070},"end":{"line":53,"column":25,"offset":1080},"indent":[]}},{"type":"inlineCode","value":"top-left","position":{"start":{"line":53,"column":25,"offset":1080},"end":{"line":53,"column":35,"offset":1090},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":53,"column":35,"offset":1090},"end":{"line":53,"column":37,"offset":1092},"indent":[]}},{"type":"inlineCode","value":"top","position":{"start":{"line":53,"column":37,"offset":1092},"end":{"line":53,"column":42,"offset":1097},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":53,"column":42,"offset":1097},"end":{"line":53,"column":44,"offset":1099},"indent":[]}},{"type":"inlineCode","value":"top-right","position":{"start":{"line":53,"column":44,"offset":1099},"end":{"line":53,"column":55,"offset":1110},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":53,"column":55,"offset":1110},"end":{"line":53,"column":57,"offset":1112},"indent":[]}},{"type":"inlineCode","value":"bottom-left","position":{"start":{"line":53,"column":57,"offset":1112},"end":{"line":53,"column":70,"offset":1125},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":53,"column":70,"offset":1125},"end":{"line":53,"column":72,"offset":1127},"indent":[]}},{"type":"inlineCode","value":"bottom","position":{"start":{"line":53,"column":72,"offset":1127},"end":{"line":53,"column":80,"offset":1135},"indent":[]}},{"type":"text","value":" (default) or ","position":{"start":{"line":53,"column":80,"offset":1135},"end":{"line":53,"column":94,"offset":1149},"indent":[]}},{"type":"inlineCode","value":"bottom-right","position":{"start":{"line":53,"column":94,"offset":1149},"end":{"line":53,"column":108,"offset":1163},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1058},"end":{"line":53,"column":108,"offset":1163},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1056},"end":{"line":53,"column":108,"offset":1163},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"duration","position":{"start":{"line":54,"column":5,"offset":1168},"end":{"line":54,"column":13,"offset":1176},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1166},"end":{"line":54,"column":15,"offset":1178},"indent":[]}},{"type":"text","value":" : before closing element, in ms, with default ","position":{"start":{"line":54,"column":15,"offset":1178},"end":{"line":54,"column":62,"offset":1225},"indent":[]}},{"type":"inlineCode","value":"5000","position":{"start":{"line":54,"column":62,"offset":1225},"end":{"line":54,"column":68,"offset":1231},"indent":[]}},{"type":"text","value":". Can also be set to ","position":{"start":{"line":54,"column":68,"offset":1231},"end":{"line":54,"column":89,"offset":1252},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":54,"column":89,"offset":1252},"end":{"line":54,"column":95,"offset":1258},"indent":[]}},{"type":"text","value":" if not automatic close your element.","position":{"start":{"line":54,"column":95,"offset":1258},"end":{"line":54,"column":132,"offset":1295},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1166},"end":{"line":54,"column":132,"offset":1295},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1164},"end":{"line":54,"column":132,"offset":1295},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1056},"end":{"line":54,"column":132,"offset":1295},"indent":[1]}},{"type":"code","lang":"jsx","meta":null,"value":"function() {\n  const toast = useToast()\n\n  const Notification = () => (\n    <Box\n      backgroundColor=\"light.900\"\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"nude.300\"\n      borderRadius=\"sm\"\n      padding=\"sm\"\n      color=\"dark.900\"\n    >\n      Lorem ipsum dolor sit amet\n    </Box>\n  )\n\n  return (\n    <Stack direction=\"row\">\n      {['top-left', 'top', 'top-right', 'bottom-left', 'bottom', 'bottom-right'].map(position => (\n        <Button\n          key={position}\n          onClick={() =>\n            toast(\n              <Notification />,\n              { position, duration: 6000 }\n            )\n          }\n        >\n          {position}\n        </Button>\n      ))}\n    </Stack>\n  )\n}","position":{"start":{"line":56,"column":1,"offset":1297},"end":{"line":92,"column":4,"offset":2024},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Supplied components","position":{"start":{"line":94,"column":4,"offset":2029},"end":{"line":94,"column":23,"offset":2048},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2026},"end":{"line":94,"column":23,"offset":2048},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can create your own notification component to display in the Toast or one of our default components: ","position":{"start":{"line":96,"column":1,"offset":2050},"end":{"line":96,"column":106,"offset":2155},"indent":[]}},{"type":"inlineCode","value":"Snackbar","position":{"start":{"line":96,"column":106,"offset":2155},"end":{"line":96,"column":116,"offset":2165},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":96,"column":116,"offset":2165},"end":{"line":96,"column":121,"offset":2170},"indent":[]}},{"type":"inlineCode","value":"Growl","position":{"start":{"line":96,"column":121,"offset":2170},"end":{"line":96,"column":128,"offset":2177},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":96,"column":128,"offset":2177},"end":{"line":96,"column":129,"offset":2178},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2050},"end":{"line":96,"column":129,"offset":2178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In general :","position":{"start":{"line":98,"column":1,"offset":2180},"end":{"line":98,"column":13,"offset":2192},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2180},"end":{"line":98,"column":13,"offset":2192},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Snackbar","position":{"start":{"line":100,"column":3,"offset":2196},"end":{"line":100,"column":13,"offset":2206},"indent":[]}},{"type":"text","value":" is used to display a temporary, information-only notification, and","position":{"start":{"line":100,"column":13,"offset":2206},"end":{"line":100,"column":80,"offset":2273},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":2196},"end":{"line":100,"column":80,"offset":2273},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2194},"end":{"line":100,"column":80,"offset":2273},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Growl","position":{"start":{"line":101,"column":3,"offset":2276},"end":{"line":101,"column":10,"offset":2283},"indent":[]}},{"type":"text","value":" is used to display a more important notification with an action (that requires the user to close the notification)","position":{"start":{"line":101,"column":10,"offset":2283},"end":{"line":101,"column":125,"offset":2398},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":2276},"end":{"line":101,"column":125,"offset":2398},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2274},"end":{"line":101,"column":125,"offset":2398},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2194},"end":{"line":101,"column":125,"offset":2398},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Snackbar","position":{"start":{"line":103,"column":5,"offset":2404},"end":{"line":103,"column":13,"offset":2412},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2400},"end":{"line":103,"column":13,"offset":2412},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"function() {\n  const toast = useToast()\n\n  return (\n    <Stack direction=\"row\">\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar>\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Info (Default)\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"error\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Error\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"warning\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Warning\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"success\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Success\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"error\" icon=\"🤯\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Custom icon\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"error\" icon={null}>\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        No icon\n      </Button>\n    </Stack>\n  )\n}","position":{"start":{"line":105,"column":1,"offset":2414},"end":{"line":180,"column":4,"offset":4126},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Growl","position":{"start":{"line":182,"column":5,"offset":4132},"end":{"line":182,"column":10,"offset":4137},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":4128},"end":{"line":182,"column":10,"offset":4137},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"function() {\n  const toast = useToast()\n\n  return (\n    <Stack direction=\"row\">\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl>\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n              <Box mt=\"sm\">\n                <Button size=\"sm\" variant=\"secondary\" onClick={() => console.log('action')}>\n                  Action\n                </Button>\n              </Box>\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Info (Default)\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"error\">\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Error\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"warning\">\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Warning\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"success\">\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Success\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"success\">\n              <Toast.Title icon=\"🎉\">\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Custom icon\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"warning\">\n              <Toast.Title icon={null}>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        No icon\n      </Button>\n    </Stack>\n  )\n}","position":{"start":{"line":184,"column":1,"offset":4139},"end":{"line":294,"column":4,"offset":7122},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Properties","position":{"start":{"line":296,"column":4,"offset":7127},"end":{"line":296,"column":14,"offset":7137},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":7124},"end":{"line":296,"column":14,"offset":7137},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Toast","position":{"start":{"line":298,"column":5,"offset":7143},"end":{"line":298,"column":10,"offset":7148},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":7139},"end":{"line":298,"column":10,"offset":7148},"indent":[]}},{"type":"jsx","value":"<props propTypes={props.propTypes['Toast.Snackbar']} />","position":{"start":{"line":300,"column":1,"offset":7150},"end":{"line":300,"column":56,"offset":7205},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Toast.Title","position":{"start":{"line":302,"column":5,"offset":7211},"end":{"line":302,"column":16,"offset":7222},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":7207},"end":{"line":302,"column":16,"offset":7222},"indent":[]}},{"type":"jsx","value":"<props propTypes={props.propTypes['Toast.Title']} />","position":{"start":{"line":304,"column":1,"offset":7224},"end":{"line":304,"column":53,"offset":7276},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dependencies","position":{"start":{"line":306,"column":4,"offset":7281},"end":{"line":306,"column":16,"offset":7293},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":7278},"end":{"line":306,"column":16,"offset":7293},"indent":[]}},{"type":"jsx","value":"<dependencies dependencies={dependencies} />","position":{"start":{"line":308,"column":1,"offset":7295},"end":{"line":308,"column":45,"offset":7339},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Peer dependencies","position":{"start":{"line":310,"column":4,"offset":7344},"end":{"line":310,"column":21,"offset":7361},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":7341},"end":{"line":310,"column":21,"offset":7361},"indent":[]}},{"type":"jsx","value":"<dependencies dependencies={peerDependencies} />","position":{"start":{"line":312,"column":1,"offset":7363},"end":{"line":312,"column":49,"offset":7411},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":315,"column":1,"offset":7414},"end":{"line":315,"column":31,"offset":7444},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":315,"column":31,"offset":7444}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/liamellis/Desktop/real-estate-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`toast`}</p>\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <tagversion version={version} name={name} />\n    <p>{`Notification component with `}<a parentName=\"p\" {...{\n        \"href\": \"https://toasted-notes.netlify.com\"\n      }}>{`toasted-note`}</a>{` and 2 components : Growl and Snackbar.`}</p>\n    <h2 {...{\n      \"id\": \"install-and-import\"\n    }}>{`Install and import`}</h2>\n    <usage component={component} name={name} peerDependencies={peerDependencies} />\n    <h2 {...{\n      \"id\": \"usetoast\"\n    }}>{`useToast`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`useToast`}</inlineCode>{` hook to show the toast element. Example below with a custom component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function() {\n  const toast = useToast()\n\n  const Notification = () => (\n    <Box\n      backgroundColor=\"light.900\"\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"nude.300\"\n      borderRadius=\"sm\"\n      padding=\"sm\"\n      color=\"dark.900\"\n    >\n      Lorem ipsum dolor sit amet\n    </Box>\n  )\n\n  return (\n    <Button onClick={() => toast(<Notification />)}>\n      Show Toast\n    </Button>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`toast`}</inlineCode>{` function takes a component to be displayed and an `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` object:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`position`}</strong>{` : one of `}<inlineCode parentName=\"li\">{`top-left`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`top`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`top-right`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`bottom-left`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`bottom`}</inlineCode>{` (default) or `}<inlineCode parentName=\"li\">{`bottom-right`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`duration`}</strong>{` : before closing element, in ms, with default `}<inlineCode parentName=\"li\">{`5000`}</inlineCode>{`. Can also be set to `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if not automatic close your element.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function() {\n  const toast = useToast()\n\n  const Notification = () => (\n    <Box\n      backgroundColor=\"light.900\"\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"nude.300\"\n      borderRadius=\"sm\"\n      padding=\"sm\"\n      color=\"dark.900\"\n    >\n      Lorem ipsum dolor sit amet\n    </Box>\n  )\n\n  return (\n    <Stack direction=\"row\">\n      {['top-left', 'top', 'top-right', 'bottom-left', 'bottom', 'bottom-right'].map(position => (\n        <Button\n          key={position}\n          onClick={() =>\n            toast(\n              <Notification />,\n              { position, duration: 6000 }\n            )\n          }\n        >\n          {position}\n        </Button>\n      ))}\n    </Stack>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"supplied-components\"\n    }}>{`Supplied components`}</h2>\n    <p>{`You can create your own notification component to display in the Toast or one of our default components: `}<inlineCode parentName=\"p\">{`Snackbar`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Growl`}</inlineCode>{`.`}</p>\n    <p>{`In general :`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Snackbar`}</inlineCode>{` is used to display a temporary, information-only notification, and`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Growl`}</inlineCode>{` is used to display a more important notification with an action (that requires the user to close the notification)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"snackbar\"\n    }}>{`Snackbar`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function() {\n  const toast = useToast()\n\n  return (\n    <Stack direction=\"row\">\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar>\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Info (Default)\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"error\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Error\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"warning\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Warning\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"success\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Success\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"error\" icon=\"🤯\">\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        Custom icon\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Snackbar variant=\"error\" icon={null}>\n              <span>Lorem ipsum dolor sit amet taciti sociosqu ad</span>\n            </Toast.Snackbar>\n          )\n        }\n      >\n        No icon\n      </Button>\n    </Stack>\n  )\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"growl\"\n    }}>{`Growl`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function() {\n  const toast = useToast()\n\n  return (\n    <Stack direction=\"row\">\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl>\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n              <Box mt=\"sm\">\n                <Button size=\"sm\" variant=\"secondary\" onClick={() => console.log('action')}>\n                  Action\n                </Button>\n              </Box>\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Info (Default)\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"error\">\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Error\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"warning\">\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Warning\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"success\">\n              <Toast.Title>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Success\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"success\">\n              <Toast.Title icon=\"🎉\">\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        Custom icon\n      </Button>\n      <Button\n        onClick={() =>\n          toast(\n            <Toast.Growl variant=\"warning\">\n              <Toast.Title icon={null}>\n                Lorem ipsum dolor sit amet\n              </Toast.Title>\n              Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos\n              himenaeos\n            </Toast.Growl>,\n            { position: 'top-right' }\n          )\n        }\n      >\n        No icon\n      </Button>\n    </Stack>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"toast-1\"\n    }}>{`Toast`}</h3>\n    <props propTypes={props.propTypes['Toast.Snackbar']} />\n    <h3 {...{\n      \"id\": \"toasttitle\"\n    }}>{`Toast.Title`}</h3>\n    <props propTypes={props.propTypes['Toast.Title']} />\n    <h2 {...{\n      \"id\": \"dependencies\"\n    }}>{`Dependencies`}</h2>\n    <dependencies dependencies={dependencies} />\n    <h2 {...{\n      \"id\": \"peer-dependencies\"\n    }}>{`Peer dependencies`}</h2>\n    <dependencies dependencies={peerDependencies} />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}